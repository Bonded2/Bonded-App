var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{r as reactExports,g as jsxRuntimeExports}from"./vendor-e6e658b6.js";const MediaScanner=__name(({onMediaSelected})=>{const[isSupported,setIsSupported]=reactExports.useState(null),[isLoading,setIsLoading]=reactExports.useState(!1),[scannedFiles,setScannedFiles]=reactExports.useState([]),[error,setError]=reactExports.useState(null),[status,setStatus]=reactExports.useState(""),[isChromeOnAndroid,setIsChromeOnAndroid]=reactExports.useState(!1),[selectedFiles,setSelectedFiles]=reactExports.useState([]),[scanProgress,setScanProgress]=reactExports.useState(0),[dateGroups,setDateGroups]=reactExports.useState({}),[selectAllMode,setSelectAllMode]=reactExports.useState(!1);reactExports.useEffect(()=>{__name(()=>{const isAndroid=/Android/i.test(navigator.userAgent),isChrome=/Chrome/i.test(navigator.userAgent)&&!/Edge|Edg/i.test(navigator.userAgent);setIsChromeOnAndroid(isAndroid&&isChrome),"showDirectoryPicker"in window?setIsSupported(!0):(setIsSupported(!1),setError("Your browser doesn't support the File System Access API"))},"checkSupport")()},[]);const extractAccurateTimestamp=__name(async file=>{try{let timestamp=file.lastModified;file.type.startsWith("image/");const now=Date.now();return(timestamp>now||timestamp<now-10*365*24*60*60*1e3)&&(timestamp=now),timestamp}catch{return file.lastModified}},"extractAccurateTimestamp"),scanDirectory=__name(async directoryHandle=>{const mediaFiles=[];let totalProcessed=0,totalItems=0;const countItems=__name(async dirHandle=>{let count=0;for await(const entry of dirHandle.values())count++,entry.kind==="directory"&&(count+=await countItems(entry));return count},"countItems");try{totalItems=await countItems(directoryHandle),setStatus(`Found ${totalItems} items to process. Starting scan...`)}catch{setStatus("Starting scan... (unable to calculate total items)")}const processDirectory=__name(async(dirHandle,path="")=>{setStatus(`Scanning: ${path||dirHandle.name}`);for await(const entry of dirHandle.values()){if(totalProcessed++,totalItems>0){const progressPercent=Math.round(totalProcessed/totalItems*100);setScanProgress(progressPercent)}const entryPath=path?`${path}/${entry.name}`:entry.name;if(entry.kind==="file"){if(/\.(jpe?g|png|pdf|heic|gif|mp4|mov)$/i.test(entry.name))try{const file=await entry.getFile(),timestamp=await extractAccurateTimestamp(file),fileDate=new Date(timestamp),fileObj={name:file.name,path:entryPath,size:file.size,type:file.type,timestamp,file,dateFormatted:fileDate.toLocaleDateString(),timeFormatted:fileDate.toLocaleTimeString(),dateISO:fileDate.toISOString(),selected:!1};mediaFiles.push(fileObj)}catch{}}else entry.kind==="directory"&&await processDirectory(entry,entryPath)}},"processDirectory");try{if(await processDirectory(directoryHandle),mediaFiles.length>0){const sortedByDate=[...mediaFiles].sort((a,b)=>a.timestamp-b.timestamp),oldestFile=sortedByDate[0],newestFile=sortedByDate[sortedByDate.length-1]}return mediaFiles}catch(error2){throw error2}},"scanDirectory"),organizeFilesByDate=__name(files=>{const groups={};return files.forEach(file=>{const dateKey=new Date(file.timestamp).toLocaleDateString("en-CA");groups[dateKey]||(groups[dateKey]=[]),groups[dateKey].push(file)}),Object.keys(groups).forEach(date=>{groups[date].sort((a,b)=>b.timestamp-a.timestamp)}),groups},"organizeFilesByDate"),toggleFileSelection=__name(index=>{const updatedFiles=[...scannedFiles];updatedFiles[index].selected=!updatedFiles[index].selected,setScannedFiles(updatedFiles);const selected=updatedFiles.filter(file=>file.selected);setSelectedFiles(selected),setDateGroups(organizeFilesByDate(updatedFiles))},"toggleFileSelection"),toggleDateGroupSelection=__name((date,isSelected)=>{const updatedFiles=[...scannedFiles];updatedFiles.forEach(file=>{file.dateFormatted===date&&(file.selected=isSelected)}),setScannedFiles(updatedFiles);const selected=updatedFiles.filter(file=>file.selected);setSelectedFiles(selected),setDateGroups(organizeFilesByDate(updatedFiles))},"toggleDateGroupSelection"),toggleSelectAll=__name(()=>{const newSelectAllMode=!selectAllMode;setSelectAllMode(newSelectAllMode);const updatedFiles=[...scannedFiles];updatedFiles.forEach(file=>{file.selected=newSelectAllMode}),setScannedFiles(updatedFiles),setSelectedFiles(newSelectAllMode?updatedFiles:[]),setDateGroups(organizeFilesByDate(updatedFiles))},"toggleSelectAll"),startScanning=__name(async()=>{if(!isSupported){setError("Your browser doesn't support the File System Access API");return}setIsLoading(!0),setScannedFiles([]),setSelectedFiles([]),setDateGroups({}),setError(null),setScanProgress(0),setStatus("Opening folder picker...");try{const directoryHandle=await window.showDirectoryPicker({mode:"read",startIn:"pictures"});setStatus(`Starting scan of ${directoryHandle.name}...`);const files=await scanDirectory(directoryHandle);files.sort((a,b)=>b.timestamp-a.timestamp),setScannedFiles(files);const groups=organizeFilesByDate(files);setDateGroups(groups),setStatus(`Scan complete! Found ${files.length} media files across ${Object.keys(groups).length} dates.`),setScanProgress(100)}catch(error2){error2.name==="AbortError"?setError("Directory selection was cancelled"):setError(`Error scanning folder: ${error2.message||"Unknown error"}`),setScanProgress(0)}finally{setIsLoading(!1)}},"startScanning"),addToTimeline=__name(()=>{if(selectedFiles.length===0){setError("Please select at least one file to add to your timeline");return}setStatus(`Adding ${selectedFiles.length} files to timeline...`);const filesByDate={};selectedFiles.forEach(file=>{const dateKey=new Date(file.timestamp).toLocaleDateString("en-CA");filesByDate[dateKey]||(filesByDate[dateKey]=[]),filesByDate[dateKey].push(file)}),onMediaSelected&&typeof onMediaSelected=="function"&&onMediaSelected(selectedFiles,filesByDate),setStatus(`Added ${selectedFiles.length} files to your timeline across ${Object.keys(filesByDate).length} dates.`)},"addToTimeline"),formatFileSize=__name(bytes=>{if(bytes===0)return"0 Bytes";const sizes=["Bytes","KB","MB","GB"],i=Math.floor(Math.log(bytes)/Math.log(1024));return`${(bytes/Math.pow(1024,i)).toFixed(2)} ${sizes[i]}`},"formatFileSize");return isSupported===null?jsxRuntimeExports.jsx("div",{className:"media-scanner",children:"Checking browser compatibility..."}):jsxRuntimeExports.jsxs("div",{className:"media-scanner",children:[jsxRuntimeExports.jsx("h2",{children:"Photo Collection"}),!isChromeOnAndroid&&jsxRuntimeExports.jsx("div",{className:"warning-message",children:jsxRuntimeExports.jsx("p",{children:"⚠️ This feature works best on Android Chrome. Other browsers may be limited."})}),!isSupported&&jsxRuntimeExports.jsxs("div",{className:"error-message",children:[jsxRuntimeExports.jsx("p",{children:"❌ Your browser doesn't support photo collection from device storage."}),jsxRuntimeExports.jsx("p",{children:"Please use Chrome on Android for the best experience."})]}),isSupported&&jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[jsxRuntimeExports.jsxs("div",{className:"scanner-instructions",children:[jsxRuntimeExports.jsx("p",{children:`Click "Start Collection" to select storage on your device. We'll find all your photos and media.`}),jsxRuntimeExports.jsx("p",{className:"scanner-tip",children:"Tip: To access your entire device storage, select the highest level directory you're permitted to access."})]}),jsxRuntimeExports.jsx("button",{className:"scan-button",onClick:startScanning,disabled:isLoading,children:isLoading?"Collecting...":"Start Photo Collection"}),isLoading&&scanProgress>0&&jsxRuntimeExports.jsxs("div",{className:"progress-container",children:[jsxRuntimeExports.jsx("div",{className:"progress-bar",style:{width:`${scanProgress}%`}}),jsxRuntimeExports.jsxs("div",{className:"progress-text",children:[scanProgress,"% Complete"]})]}),status&&jsxRuntimeExports.jsx("p",{className:"status-message",children:status}),error&&jsxRuntimeExports.jsx("div",{className:"error-message",children:jsxRuntimeExports.jsx("p",{children:error})}),scannedFiles.length>0&&jsxRuntimeExports.jsxs("div",{className:"results-container",children:[jsxRuntimeExports.jsxs("div",{className:"results-header",children:[jsxRuntimeExports.jsxs("h3",{children:["Scanned Files (",scannedFiles.length," files across ",Object.keys(dateGroups).length," dates)"]}),jsxRuntimeExports.jsxs("div",{className:"selection-actions",children:[jsxRuntimeExports.jsx("button",{className:"select-all-button",onClick:toggleSelectAll,children:selectAllMode?"Deselect All":"Select All"}),jsxRuntimeExports.jsxs("div",{className:"selection-info",children:[selectedFiles.length," files selected"]}),jsxRuntimeExports.jsx("button",{className:"add-to-timeline-button",onClick:addToTimeline,disabled:selectedFiles.length===0,children:"Add to Timeline"})]})]}),jsxRuntimeExports.jsx("div",{className:"date-grouping-container",children:Object.keys(dateGroups).sort((a,b)=>new Date(b)-new Date(a)).map(date=>{const filesInGroup=dateGroups[date],allSelected=filesInGroup.every(file=>file.selected),someSelected=filesInGroup.some(file=>file.selected);return jsxRuntimeExports.jsxs("div",{className:"date-group",children:[jsxRuntimeExports.jsxs("div",{className:"date-header",children:[jsxRuntimeExports.jsxs("div",{className:"date-title",children:[date," (",filesInGroup.length," files)"]}),jsxRuntimeExports.jsx("button",{className:`select-date-button ${allSelected?"selected":someSelected?"partial":""}`,onClick:()=>toggleDateGroupSelection(date,!allSelected),children:allSelected?"Deselect All":"Select All"})]}),jsxRuntimeExports.jsx("ul",{className:"file-list",children:filesInGroup.map(file=>{const originalIndex=scannedFiles.findIndex(f=>f===file);return jsxRuntimeExports.jsxs("li",{className:`file-item ${file.selected?"selected":""}`,onClick:()=>toggleFileSelection(originalIndex),children:[jsxRuntimeExports.jsx("span",{className:"file-name",children:file.name}),jsxRuntimeExports.jsx("span",{className:"file-path",children:file.path}),jsxRuntimeExports.jsx("span",{className:"file-size",children:formatFileSize(file.size)}),jsxRuntimeExports.jsx("span",{className:"file-time",children:file.timeFormatted}),jsxRuntimeExports.jsx("input",{type:"checkbox",checked:file.selected,onChange:()=>toggleFileSelection(originalIndex),className:"file-checkbox"})]},originalIndex)})})]},date)})})]})]})]})},"MediaScanner");export{MediaScanner as M};
