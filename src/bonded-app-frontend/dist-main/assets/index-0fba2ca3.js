var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{u as useNavigate,r as reactExports,g as jsxRuntimeExports}from"./vendor-e6e658b6.js";import icpUserService from"./icpUserService-71066c08.js";import"./icp-sdk-b71c0736.js";import"./icpCanisterService-30902200.js";import"./index-ed0f0e28.js";const _YotiService=class _YotiService{constructor(){this.isInitialized=!1,this.isSDKLoaded=!1,this.currentSession=null,this.baseUrl=null,this.apiKey=null,this.userId=null,this.config={verificationType:"identity",documentTypes:["PASSPORT","DRIVING_LICENCE","NATIONAL_ID"],livenessCheck:!0,language:"en",title:"Bonded Identity Verification",instructions:"Please prepare your identity document and follow the verification steps.",enableDocumentCapture:!0,enableLivenessDetection:!0,enableAgeVerification:!1,enableAddressVerification:!1,theme:{primaryColor:"#ff704d",backgroundColor:"#ffffff",textColor:"#000000"},network:{timeout:3e4,retryAttempts:3},debug:!1},this.eventListeners=new Map,this.isOnline=navigator.onLine,this.setupNetworkListeners(),this.isPlaceholder=!0}async initialize(options={}){try{if(this.baseUrl=options.baseUrl||{}.REACT_APP_YOTI_BASE_URL,this.apiKey=options.apiKey||{}.REACT_APP_YOTI_API_KEY,this.userId=options.userId,options.verificationType&&(this.config.verificationType=options.verificationType),!this.baseUrl||!this.apiKey)throw new Error("Yoti baseUrl and apiKey are required");await this.loadSDK();const supportResult=await this.checkBrowserSupport();if(!supportResult.supported)throw new Error(`Browser not supported: ${supportResult.reason}`);return this.isInitialized=!0,this.emit("initialized",{supportResult,placeholder:!0}),!0}catch(error){throw this.emit("error",{error:error.message,stage:"initialization"}),error}}async loadSDK(){if(!this.isSDKLoaded)try{if(window.YotiNativeBridgeInfo){this.isSDKLoaded=!0;return}const sdkUrl={}.REACT_APP_YOTI_SDK_URL||"https://sdk.yoti.com/js/yoti-sdk.js";return new Promise((resolve,reject)=>{if(window.Yoti||document.querySelector(`script[src="${sdkUrl}"]`)){this.isSDKLoaded=!0,resolve();return}setTimeout(()=>{this.isSDKLoaded=!0,resolve()},1e3)})}catch(error){throw new Error(`Failed to load Yoti SDK: ${error.message}`)}}async checkBrowserSupport(){try{if(window.YotiNativeBridgeInfo)return{supported:!0,is_native_bridge:!0,capabilities:{}};const hasCamera=!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia),hasWebGL=!!window.WebGLRenderingContext,hasWebRTC=!!window.RTCPeerConnection;return new Promise(resolve=>{setTimeout(()=>{resolve({supported:hasCamera&&hasWebGL,capabilities:{camera:hasCamera,webgl:hasWebGL,webrtc:hasWebRTC,placeholder:!0},reason:hasCamera?hasWebGL?null:"WebGL support required":"Camera access required"})},500)})}catch(error){return{supported:!1,reason:error.message,capabilities:{}}}}async getSessionToken(operation="identity",userId=null){if(!this.isInitialized)throw new Error("Yoti service not initialized");const requestUserId=userId||this.userId||"anonymous";try{return new Promise(resolve=>{setTimeout(()=>{resolve({session_id:`placeholder_session_${Date.now()}`,session_token:`placeholder_token_${Math.random().toString(36).substring(7)}`,client_session_token_ttl:600,session_creation_time:new Date().toISOString(),user_id:requestUserId,operation,placeholder:!0})},800)})}catch(error){throw new Error(`Failed to get Yoti session token: ${error.message}`)}}async startVerification(operation="identity",userId=null,options={}){if(!this.isInitialized)throw new Error("Yoti service not initialized");try{const sessionData=await this.getSessionToken(operation,userId);this.currentSession=sessionData;const yotiElement=this.createYotiElement(sessionData.session_token,options);return await this.runVerification(yotiElement)}catch(error){throw this.emit("error",{error:error.message,stage:"verification_start",session:this.currentSession}),error}}createYotiElement(sessionToken,options={}){const yotiElement=document.createElement("div");return yotiElement.className="yoti-verification-container",yotiElement.setAttribute("data-session-token",sessionToken),Object.keys(this.config).forEach(key=>{options[key]!==void 0&&yotiElement.setAttribute(`data-${key.replace(/([A-Z])/g,"-$1").toLowerCase()}`,typeof options[key]=="object"?JSON.stringify(options[key]):options[key].toString())}),yotiElement.innerHTML=`
      <div style="
        padding: 40px 20px;
        text-align: center;
        background: rgba(255, 255, 255, 0.1);
        border: 2px dashed rgba(255, 255, 255, 0.3);
        border-radius: 12px;
        color: white;
        font-family: 'Rethink Sans', sans-serif;
      ">
        <div style="font-size: 48px; margin-bottom: 16px;">🚧</div>
        <h3 style="margin: 0 0 12px 0; font-size: 18px;">Yoti Verification</h3>
        <p style="margin: 0; font-size: 14px; opacity: 0.8;">
          Placeholder implementation<br>
          Awaiting Yoti account verification
        </p>
      </div>
    `,yotiElement}async runVerification(yotiElement){return new Promise((resolve,reject)=>{let container=document.getElementById("yoti-verification-container");container||(container=document.createElement("div"),container.id="yoti-verification-container",container.style.cssText=`
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.8);
          display: flex;
          align-items: center;
          justify-content: center;
          z-index: 10000;
        `,document.body.appendChild(container));const cleanup=__name(()=>{container&&container.parentNode&&container.parentNode.removeChild(container)},"cleanup");setTimeout(()=>{this.emit("connected",{placeholder:!0}),setTimeout(()=>{this.emit("started",{placeholder:!0}),setTimeout(()=>{this.emit("progress",{progress:.3,placeholder:!0}),setTimeout(()=>{this.emit("progress",{progress:.6,placeholder:!0}),setTimeout(()=>{this.emit("progress",{progress:.9,placeholder:!0}),setTimeout(()=>{this.emit("passed",{session_id:this.currentSession?.session_id,verification_status:"COMPLETED",placeholder:!0}),cleanup(),resolve({status:"success",session_id:this.currentSession?.session_id,verification_status:"COMPLETED",timestamp:new Date().toISOString(),placeholder:!0})},1e3)},1e3)},1e3)},1e3)},1e3)},1e3),container.appendChild(yotiElement)})}async validateResult(sessionId){if(!this.isInitialized)throw new Error("Yoti service not initialized");try{return new Promise(resolve=>{setTimeout(()=>{resolve({session_id:sessionId,verification_status:"COMPLETED",identity_verified:!0,liveness_verified:!0,document_verified:!0,timestamp:new Date().toISOString(),placeholder:!0})},500)})}catch(error){throw new Error(`Failed to validate Yoti result: ${error.message}`)}}cancelVerification(){const yotiElement=document.querySelector(".yoti-verification-container");yotiElement&&typeof yotiElement.cancelSession=="function"&&yotiElement.cancelSession(),this.emit("cancelled",{placeholder:!0})}on(event,callback){this.eventListeners.has(event)||this.eventListeners.set(event,[]),this.eventListeners.get(event).push(callback)}off(event,callback){if(this.eventListeners.has(event)){const listeners=this.eventListeners.get(event),index=listeners.indexOf(callback);index>-1&&listeners.splice(index,1)}}emit(event,data){try{this.eventListeners.has(event)&&this.eventListeners.get(event).forEach(callback=>{try{callback(data)}catch{}})}catch{}}setupNetworkListeners(){window.addEventListener("online",()=>{this.isOnline=!0,this.emit("online",{timestamp:Date.now()})}),window.addEventListener("offline",()=>{this.isOnline=!1,this.emit("offline",{timestamp:Date.now()})})}getStatus(){return{isInitialized:this.isInitialized,isSDKLoaded:this.isSDKLoaded,isOnline:this.isOnline,currentSession:this.currentSession,config:this.config,placeholder:this.isPlaceholder,nativeBridge:!!window.YotiNativeBridgeInfo}}cleanup(){const container=document.getElementById("yoti-verification-container");container&&container.parentNode&&container.parentNode.removeChild(container),this.eventListeners.clear(),this.currentSession=null,this.isInitialized=!1}};__name(_YotiService,"YotiService");let YotiService=_YotiService;const yotiService=new YotiService;const Verify=__name(()=>{const navigate=useNavigate(),[verificationState,setVerificationState]=reactExports.useState({status:"ready",message:"Ready to start verification",progress:0,error:null}),[yotiReady,setYotiReady]=reactExports.useState(!1),[browserSupported,setBrowserSupported]=reactExports.useState(null),[userProfile,setUserProfile]=reactExports.useState(null);reactExports.useEffect(()=>(initializeVerification(),()=>{yotiService.cleanup()}),[]);const initializeVerification=__name(async()=>{try{setVerificationState({status:"initializing",message:"Setting up verification...",progress:10,error:null});const currentUser=await icpUserService.getCurrentUser();setUserProfile(currentUser);const principal=currentUser?.principal||"anonymous";await yotiService.initialize({baseUrl:{}.REACT_APP_YOTI_BASE_URL||"https://api.yoti.com/idverify/v1",apiKey:{}.REACT_APP_YOTI_API_KEY||"demo_key",userId:principal,verificationType:"identity"})&&(setYotiReady(!0),setBrowserSupported(!0),setVerificationState({status:"ready",message:"Ready to start identity verification",progress:100,error:null}))}catch(error){let errorMessage="Failed to initialize verification",browserSupport=!0;error.message.includes("Browser not supported")?(errorMessage="Your browser does not support biometric verification",browserSupport=!1):error.message.includes("baseUrl")||error.message.includes("apiKey")?errorMessage="Verification service configuration error":navigator.onLine||(errorMessage="No internet connection. Please check your network and try again."),setBrowserSupported(browserSupport),setVerificationState({status:"failed",message:errorMessage,progress:0,error:error.message})}},"initializeVerification"),setupEventListeners=__name(()=>{yotiService.on("connected",()=>{setVerificationState({status:"connecting",message:"Connecting to verification service...",progress:20,error:null})}),yotiService.on("started",()=>{setVerificationState({status:"started",message:"Please prepare your identity document and follow the instructions",progress:30,error:null})}),yotiService.on("progress",data=>{const progress=Math.min(30+data.progress*.6,90);setVerificationState({status:"started",message:"Verification in progress...",progress,error:null})}),yotiService.on("passed",()=>{setVerificationState({status:"processing",message:"Verification successful! Processing results...",progress:95,error:null})}),yotiService.on("failed",data=>{let failureMessage="Verification failed. Please try again.";if(data.reason_code)switch(data.reason_code){case"DOCUMENT_NOT_READABLE":failureMessage="Document could not be read. Please ensure good lighting and try again.";break;case"NETWORK_ERROR":failureMessage="Network connection issue. Please check your internet and try again.";break;case"SESSION_TIMEOUT":failureMessage="Verification session timed out. Please try again.";break;case"DOCUMENT_NOT_SUPPORTED":failureMessage="Document type not supported. Please use a valid ID document.";break;case"LIVENESS_CHECK_FAILED":failureMessage="Liveness check failed. Please ensure you are clearly visible and try again.";break;default:failureMessage=`Verification failed: ${data.reason||"Unknown error"}`}setVerificationState({status:"failed",message:failureMessage,progress:0,error:data.reason_code||data.reason})}),yotiService.on("cancelled",()=>{setVerificationState({status:"ready",message:"Verification cancelled. Ready to try again.",progress:0,error:null})}),yotiService.on("error",data=>{setVerificationState({status:"failed",message:`Verification error: ${data.error}`,progress:0,error:data.error})}),yotiService.on("unsupported",data=>{setBrowserSupported(!1),setVerificationState({status:"failed",message:`Browser not supported: ${data.reason}`,progress:0,error:data.reason})})},"setupEventListeners"),handleVerification=__name(async()=>{if(!yotiReady){await initializeVerification();return}try{setupEventListeners(),setVerificationState({status:"connecting",message:"Starting verification...",progress:10,error:null});const operation=(userProfile?.kycCompleted,"identity"),result=await yotiService.startVerification(operation);result.success&&await handleVerificationSuccess(result)}catch(error){setVerificationState({status:"failed",message:error.message||"Verification failed. Please try again.",progress:0,error:error.message})}},"handleVerification"),handleVerificationSuccess=__name(async result=>{try{setVerificationState({status:"processing",message:"Verification successful! Updating your profile...",progress:95,error:null});const completedProfile={...userProfile?.settings?.profile_metadata?JSON.parse(userProfile.settings.profile_metadata):{},profileComplete:!0,kycCompleted:!0,kycCompletedAt:Date.now(),verificationProvider:"Yoti",verificationDetails:{operation:result.details?.operation||"identity",verificationType:"identity",sessionId:result.session_id,verificationStatus:result.verification_status,documentVerified:result.document_verified||!1,livenessVerified:result.liveness_verified||!1,completedAt:Date.now()}};await icpUserService.updateUserSettings({profile_metadata:[JSON.stringify(completedProfile)]});try{await icpUserService.verifyKYC()}catch{}setVerificationState({status:"completed",message:"Identity verification completed successfully!",progress:100,error:null}),setTimeout(()=>{navigate("/timeline")},2e3)}catch(error){setVerificationState({status:"failed",message:"Failed to save verification results. Please contact support.",progress:0,error:error.message})}},"handleVerificationSuccess"),getStatusIcon=__name(()=>{switch(verificationState.status){case"ready":return"🎯";case"initializing":case"connecting":return"🔄";case"started":return"📷";case"processing":return"⚙️";case"completed":return"✅";case"failed":return"❌";default:return"🎯"}},"getStatusIcon"),canStartVerification=__name(()=>yotiReady&&browserSupported&&verificationState.status==="ready"&&navigator.onLine,"canStartVerification"),getButtonText=__name(()=>{if(!navigator.onLine)return"No Internet Connection";if(!browserSupported)return"Browser Not Supported";if(!yotiReady)return"Setting Up...";switch(verificationState.status){case"ready":return"Start Verification with";case"initializing":return"Initializing...";case"connecting":return"Connecting...";case"started":return"Verification in Progress...";case"processing":return"Processing Results...";case"completed":return"Verification Complete!";case"failed":return"Try Again with";default:return"Verify with"}},"getButtonText");return jsxRuntimeExports.jsx("div",{className:"verify improved-contrast","data-model-id":"632:1329",children:jsxRuntimeExports.jsxs("div",{className:"verify-container",children:[jsxRuntimeExports.jsx("div",{className:"icon",children:jsxRuntimeExports.jsxs("div",{className:"people",children:[jsxRuntimeExports.jsx("img",{className:"vector",alt:"Vector",src:"https://c.animaapp.com/pbEV2e39/img/vector-4-2.svg"}),jsxRuntimeExports.jsx("img",{className:"img",alt:"Vector",src:"https://c.animaapp.com/pbEV2e39/img/vector-5-2.svg"}),jsxRuntimeExports.jsx("div",{className:"ellipse"}),jsxRuntimeExports.jsx("div",{className:"ellipse-2"})]})}),jsxRuntimeExports.jsxs("h1",{className:"title",children:["We'd like you to ",jsxRuntimeExports.jsx("br",{}),"verify your identity"]}),jsxRuntimeExports.jsx("div",{className:"verified-icon",children:jsxRuntimeExports.jsx("img",{className:"verified",alt:"Verified",src:"https://c.animaapp.com/pbEV2e39/img/verified-1.svg"})}),jsxRuntimeExports.jsx("p",{className:"description",children:"To ensure the security and authenticity of your relationship evidence, we'll verify your identity using advanced digital identity verification technology."}),jsxRuntimeExports.jsxs("div",{className:`verification-status ${verificationState.status}`,children:[jsxRuntimeExports.jsx("div",{className:"status-icon",children:getStatusIcon()}),jsxRuntimeExports.jsx("div",{className:"status-message",children:verificationState.message}),verificationState.progress>0&&jsxRuntimeExports.jsx("div",{className:"progress-bar",children:jsxRuntimeExports.jsx("div",{className:"progress-fill",style:{width:`${verificationState.progress}%`}})})]}),verificationState.error&&jsxRuntimeExports.jsxs("div",{className:"error-banner",role:"alert",children:[jsxRuntimeExports.jsx("span",{className:"error-icon",children:"⚠️"}),verificationState.message,!browserSupported&&jsxRuntimeExports.jsxs("div",{className:"error-details",children:[jsxRuntimeExports.jsx("p",{children:"Your browser doesn't support the required features for biometric verification."}),jsxRuntimeExports.jsx("p",{children:"Please try using a recent version of Chrome, Firefox, Safari, or Edge."})]})]}),!navigator.onLine&&jsxRuntimeExports.jsxs("div",{className:"network-warning",children:[jsxRuntimeExports.jsx("span",{className:"warning-icon",children:"📶"}),"No internet connection. Please connect to the internet to continue."]}),jsxRuntimeExports.jsx("button",{className:`verify-button ${verificationState.status==="ready"?"ready":"processing"}`,onClick:handleVerification,disabled:!canStartVerification(),children:jsxRuntimeExports.jsxs("div",{className:"button-layout",children:[jsxRuntimeExports.jsx("div",{className:"button-content",children:jsxRuntimeExports.jsx("div",{className:"button-label",children:getButtonText()})}),canStartVerification()&&jsxRuntimeExports.jsx("div",{className:"yoti-logo",children:jsxRuntimeExports.jsx("img",{className:"yoti-image",alt:"Yoti",src:"https://c.animaapp.com/pbEV2e39/img/clip-path-group@2x.png"})})]})}),jsxRuntimeExports.jsxs("div",{className:"skip-verification-section",children:[jsxRuntimeExports.jsx("div",{className:"skip-divider",children:jsxRuntimeExports.jsx("span",{children:"or"})}),jsxRuntimeExports.jsx("button",{className:"skip-verification-button",onClick:()=>navigate("/timeline"),children:jsxRuntimeExports.jsxs("div",{className:"skip-content",children:[jsxRuntimeExports.jsx("div",{className:"skip-icon",children:"⏭️"}),jsxRuntimeExports.jsxs("div",{className:"skip-text",children:[jsxRuntimeExports.jsx("div",{className:"skip-title",children:"Skip verification for now"}),jsxRuntimeExports.jsx("div",{className:"skip-subtitle",children:"You can verify your identity later in settings"})]})]})}),jsxRuntimeExports.jsxs("div",{className:"skip-note",children:[jsxRuntimeExports.jsx("span",{className:"note-icon",children:"ℹ️"}),jsxRuntimeExports.jsx("span",{children:"Identity verification can be completed later when you're ready to export official documents"})]})]}),verificationState.status==="ready"&&jsxRuntimeExports.jsxs("div",{className:"verification-help",children:[jsxRuntimeExports.jsx("h3",{children:"What to expect:"}),jsxRuntimeExports.jsxs("ul",{children:[jsxRuntimeExports.jsx("li",{children:"📱 Have your identity document ready"}),jsxRuntimeExports.jsx("li",{children:"📄 Ensure document is clearly visible"}),jsxRuntimeExports.jsx("li",{children:"💡 Use good lighting for document capture"}),jsxRuntimeExports.jsx("li",{children:"⏱️ The process takes about 1-2 minutes"})]}),jsxRuntimeExports.jsxs("p",{className:"privacy-notice",children:[jsxRuntimeExports.jsx("strong",{children:"Privacy:"})," Your identity data is processed securely and encrypted at all times."]})]})]})})},"Verify");export{Verify};
